os: linux
dist: bionic

jdk:
 - openjdk11

language: python
python:
   - "3.6"
  
before_install:
 - set -e

notifications:
  email:
    on_success: change
    on_failure: change

env:
 - RELEASE=master
 - RELEASE=master DO_IMPORT=1


# for marytts
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

install:
 - hostname -I
 - hostname -i
 - sudo apt-get purge golang* || echo "No old golang packages to delete"
 - sudo apt-get install python
 - wget https://dl.google.com/go/go1.13.6.linux-amd64.tar.gz
 - sudo tar -C /usr/local -xzf go1.13.6.linux-amd64.tar.gz
 - export PATH=/usr/local/go/bin:$PATH
 - export GOPATH=$HOME/go
 - export GOROOT=/usr/local/go
 - which go && go version && go env

 - sudo apt-get install opus-tools
 - sudo pip install --upgrade pip
 - pip install -r requirements.txt

# command to run tests
script:
 - set -e
 - export basedir=`pwd`
 
 # AHOTTS
 - cd $basedir
 - hostname -I
 - hostname -i
 - git clone https://github.com/Elhuyar/AhoTTS-eu-Wikispeech.git
 - cd AhoTTS-eu-Wikispeech
 - git checkout $RELEASE || echo "No such release for ahotts. Using master."
 - sh script_compile_all_linux.sh && mkdir -p txt wav
 - sh start_ahotts_wikispeech.sh &
 - export ahotts_pid=$!
 - echo "ahotts started with pid $ahotts_pid"
 - sleep 20
 - python ahotts_testcall.py "test call for ahotts"

 # SYMBOLSET 
 - cd $basedir
 - git clone https://github.com/stts-se/symbolset
 - cd symbolset
 - git checkout $RELEASE || echo "No such release for symbolset. Using master."
 - cd server
 - git clone https://github.com/stts-se/lexdata.git
 - cd lexdata
 - git checkout $RELEASE || echo "No such release for lexdata. Using master."
 - cd ..
 - bash setup.sh lexdata ss_files
 - go run *.go -ss_files ss_files &
 - export symbolset_pid=$!
 - echo "symbolset server started with pid $symbolset_pid"
 - sleep 2

 # PRONLEX
 - cd $basedir
 - mkdir -p $GOPATH/src/github.com/stts-se && cd $GOPATH/src/github.com/stts-se/
 - git clone https://github.com/stts-se/pronlex.git
 - cd pronlex
 - git checkout $RELEASE || echo "No such release for pronlex. Using master."
 - go get ./...
 - bash scripts/setup.sh -a /tmp/appdir -e sqlite

 - | 
   if [ -v DO_IMPORT ]; then
     bash scripts/import.sh -e sqlite -f lexdata -a /tmp/appdir -r $RELEASE
   fi

 - bash scripts/start_server.sh -a /tmp/appdir -e sqlite &
 - export pronlex_pid=$!
 - echo "pronlex started with pid $pronlex_pid"
 - sleep 20
 
 # MARYTTS
 - cd $basedir
 - git clone https://github.com/stts-se/marytts.git
 - cd marytts
 - git checkout $RELEASE || echo "No such release for marytts. Using master."

 - ./gradlew check
 - ./gradlew installDist --stacktrace

 - cp stts_voices/voice-ar-nah-hsmm-5.2.jar build/install/marytts/lib/
 - cp stts_voices/voice-dfki-spike-hsmm-5.1.jar build/install/marytts/lib/
 - cp stts_voices/voice-stts_no_nst-hsmm-5.2.jar build/install/marytts/lib/
 - cp stts_voices/voice-stts_sv_nst-hsmm-5.2-SNAPSHOT.jar build/install/marytts/lib/

# - ./gradlew assembleDist
 - ./gradlew test
 - ./gradlew run &
 - export marytts_pid=$!
 - echo "marytts started with pid $marytts_pid"
 - sleep 20
 
 # WIKISPEECH FULL
 - cd $basedir

 - |
    if [ -v DO_IMPORT ]; then
     python3 bin/wikispeech .travis/travis-full.conf &
     export wikispeech_pid=$!
    else
     python3 bin/wikispeech .travis/travis-min.conf &
     export wikispeech_pid=$!
    fi

 - echo "wikispeech started with pid $wikispeech_pid"
 - sleep 20
 
# - sh .travis/exit_server_and_fail_if_not_running.sh wikispeech $wikispeech_pid
# - sh .travis/exit_server_and_fail_if_not_running.sh marytts $marytts_pid
# - sh .travis/exit_server_and_fail_if_not_running.sh pronlex $pronlex_pid
# - sh .travis/exit_server_and_fail_if_not_running.sh pronlex $symbolset_pid
# - sh .travis/exit_server_and_fail_if_not_running.sh ahotts $ahotts_pid
 
